name: iOS Build & Submit

on:
  workflow_dispatch:
    inputs:
      profile:
        description: "EAS profile"
        required: false
        default: "production"

jobs:
  build:
    runs-on: macos-latest
    env:
      EAS_PROFILE: ${{ github.event.inputs.profile || 'production' }}
      EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install EAS CLI and Expo
        run: npm i -g eas-cli expo

      - name: Install dependencies
        run: npm ci || npm i

      - name: Write App Store Connect API key
        shell: bash
        env:
          ASC_API_KEY_JSON: ${{ secrets.ASC_API_KEY_JSON }}
        run: |
          printf '%s' "$ASC_API_KEY_JSON" > asc.json
          jq . asc.json > /dev/null

      - name: Inject ASC metadata into eas.json
        run: |
          KEY_ID=$(jq -r '.keyId' asc.json)
          ISSUER_ID=$(jq -r '.issuerId' asc.json)
          TMP_FILE=$(mktemp)
          jq \
            --arg path "./asc.json" \
            --arg keyId "$KEY_ID" \
            --arg issuerId "$ISSUER_ID" \
            '.submit.production.ios.ascApiKeyPath=$path
             | .submit.production.ios.ascApiKeyId=$keyId
             | .submit.production.ios.ascApiKeyIssuerId=$issuerId' \
            eas.json > "$TMP_FILE"
          mv "$TMP_FILE" eas.json

      - name: Setup environment variables
        run: |
          echo "EXPO_PUBLIC_SUPABASE_URL=${{ secrets.EXPO_PUBLIC_SUPABASE_URL }}" >> $GITHUB_ENV
          echo "EXPO_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.EXPO_PUBLIC_SUPABASE_ANON_KEY }}" >> $GITHUB_ENV
          echo "EAS_SKIP_AUTO_FINGERPRINT=1" >> $GITHUB_ENV

      - name: Local iOS build (macOS runner)
        run: eas build --platform ios --profile $EAS_PROFILE --local --non-interactive

      - name: Submit to App Store Connect
        env:
          OPENSSL_CONF: /dev/null
        run: |
          IPA_PATH=$(find . -name "*.ipa" -print -quit)
          if [ -z "$IPA_PATH" ]; then
            echo "No IPA artifact found" >&2
            exit 1
          fi
          eas submit -p ios --path "$IPA_PATH" --non-interactive
        shell: bash
