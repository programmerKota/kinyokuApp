{
  "name": "abstinence-challenge",
  "version": "1.0.0",
  "main": "index.ts",
  "scripts": {
    "start": "expo start",
    "start:tunnel": "expo start --tunnel",
    "start:dev-client:tunnel": "expo start --dev-client --tunnel",
    "android": "expo start --android",
    "ios": "expo start --ios",
    "ios:dev-client": "expo start --dev-client",
    "ios:dev-client:lan": "expo start --dev-client --lan",
    "ios:register-device": "eas device:create",
    "build:ios:dev": "eas build -p ios --profile development",
    "build:ios:preview": "eas build -p ios --profile preview",
    "update:preview": "eas update --branch preview",
    "eas:secrets:setup": "node scripts/setupEasSecrets.cjs",
    "web": "expo start --web",
    "seed": "node scripts/seedDummyData.cjs",
    "seed:related": "node scripts/seedRelated.cjs",
    "seed:diaries": "node scripts/seedDiaries.cjs",
    "seed:all": "npm run -s seed && npm run -s seed:related && npm run -s seed:diaries",
    "seed:docker": "docker compose run --rm --no-deps -e GCLOUD_PROJECT=demo-project -e FIRESTORE_EMULATOR_HOST=firebase-emulators:8080 batch-scheduler node scripts/seedDummyData.cjs",
    "seed:related:docker": "docker compose run --rm --no-deps -e GCLOUD_PROJECT=demo-project -e FIRESTORE_EMULATOR_HOST=firebase-emulators:8080 batch-scheduler node scripts/seedRelated.cjs",
    "seed:tournament:docker": "docker compose run --rm --no-deps -e GCLOUD_PROJECT=demo-project -e FIRESTORE_EMULATOR_HOST=firebase-emulators:8080 -e TID=%TID% -e REQ=%REQ% -e JOIN=%JOIN% batch-scheduler node scripts/seedTournamentMembers.cjs",
    "seed:all:docker": "npm run -s seed:docker && npm run -s seed:related:docker",
    "typecheck": "tsc --project tsconfig.typecheck.json --noEmit",
    "lint": "eslint . --ext .ts,.tsx",
    "lint:fix": "eslint . --ext .ts,.tsx --fix",
    "format": "prettier . --write",
    "test": "jest",
    "test:watch": "jest --watch",
    "prepare": "husky",
    "lint:unused": "ts-prune",
    "emulators": "firebase emulators:start --project demo-project --import ./data/firebase --export-on-exit --config firebase.json"
  },
  "dependencies": {
    "@expo/metro-runtime": "~5.0.4",
    "@react-native-async-storage/async-storage": "^1.24.0",
    "@react-navigation/bottom-tabs": "^7.4.7",
    "@react-navigation/native": "^7.1.17",
    "@react-navigation/stack": "^7.4.8",
    "expo": "~53.0.22",
    "expo-application": "^6.1.5",
    "expo-dev-client": "~5.2.4",
    "expo-device": "^7.1.4",
    "expo-image-picker": "~16.1.4",
    "expo-notifications": "^0.31.4",
    "expo-router": "^3.5.24",
    "expo-status-bar": "~2.2.3",
    "expo-updates": "~0.28.17",
    "firebase": "^12.2.1",
    "react": "19.0.0",
    "react-dom": "19.0.0",
    "react-native": "0.79.6",
    "react-native-gesture-handler": "~2.24.0",
    "react-native-purchases": "^9.4.0",
    "react-native-reanimated": "~3.17.4",
    "react-native-safe-area-context": "^5.6.1",
    "react-native-screens": "^4.16.0",
    "react-native-vector-icons": "^10.3.0",
    "react-native-web": "^0.20.0"
  },
  "devDependencies": {
    "@babel/core": "^7.25.2",
    "@faker-js/faker": "^10.0.0",
    "@types/jest": "^30.0.0",
    "@types/react": "~19.0.10",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "babel-plugin-module-resolver": "^5.0.2",
    "eas-cli": ">=12.6.0",
    "eslint": "^8.57.1",
    "eslint-config-prettier": "^9.1.2",
    "eslint-import-resolver-typescript": "^3.10.1",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-prettier": "^5.5.4",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^4.6.2",
    "eslint-plugin-unused-imports": "^4.2.0",
    "expo-build-properties": "^0.12.5",
    "firebase-admin": "^13.5.0",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "lint-staged": "^15.5.2",
    "metro": "0.81.0",
    "prettier": "^3.6.2",
    "ts-jest": "^29.2.5",
    "ts-node": "^10.9.2",
    "ts-prune": "^0.10.3",
    "tsx": "^4.20.5",
    "typescript": "~5.8.3"
  },
  "lint-staged": {
    "*.{ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "private": true,
  "overrides": {
    "metro": "0.81.0"
  }
}
